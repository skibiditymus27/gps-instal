version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${PGDATABASE:-gpsinstal}
      POSTGRES_USER: ${PGUSER:-gpsinstal}
      POSTGRES_PASSWORD: ${PGPASSWORD:-gpsinstal}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - './backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro,z'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "$${POSTGRES_USER}" -d "$${POSTGRES_DB}"']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      PGHOST: postgres
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - '3000'
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - backend
    ports:
      - '80:80'
    volumes:
      - './nginx/default.conf:/etc/nginx/conf.d/default.conf:ro,z'
      - './frontend:/usr/share/nginx/html:ro,z'
    restart: unless-stopped

volumes:
  pgdata:
